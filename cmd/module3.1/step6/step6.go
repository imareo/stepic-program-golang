/*
В ходе анализа результатов переписи населения информация была сохранена в объекте типа map:

groupCity := map[int][]string{
10:   []string{...}, // города с населением 10-99 тыс. человек
100:  []string{...}, // города с населением 100-999 тыс. человек
1000: []string{...}, // города с населением 1000 тыс. человек и более
}
При подготовке важного отчета о городах с населением 100-999 тыс. человек был подготовлен другой объект типа map:

cityPopulation := map[string]int{
город: население города в тысячах человек,
}
Однако база данных с информацией о точной численности населения содержала ошибки, поэтому в cityPopulation
в т.ч. была сохранена информация о городах, которые входят в другие группы из groupCity.

Ваша программа имеет доступ к обоим указанным отображениям, требуется исправить cityPopulation, чтобы в ней
была сохранена информация только о городах из группы groupCity[100].

Функция main() уже объявлена, доступ к отображениям осуществляется по указанным именам. По результатам
выполнения ничего больше делать не требуется, проверка будет осуществлена автоматически.
*/
package main

func main() {
	groupCity := map[int][]string{
		10:   {"p1", "p2", "p3"},
		100:  {"p4", "p5", "p6"},
		1000: {"p7", "p8", "p9"},
	}
	cityPopulation := map[string]int{
		"p1": 11,
		"p2": 22,
		"p3": 333, // this incorrect
		"p4": 444,
		"p5": 555,
		"p6": 666,
		"p7": 7777,
		"p8": 8888,
		"p9": 9999,
	}

	// todo test ?
	for name := range cityPopulation {
		isCityFine := false
		for _, city := range groupCity[100] {
			if name == city {
				isCityFine = true
			}
		}
		if !isCityFine {
			delete(cityPopulation, name)
		}
	}

}
